# Use "cargo install garden-tools" to install garden https://gitlab.com/garden-rs/garden
#
# Usage:
#
#   # Development Workflows
#   garden develop              # Runs "pip install --editable ."
#   garden requirements         # Install runtime requirements
#   garden requirements/opt     # Install optional runtime requirements
#   garden requirements/dev     # Install developer requirements
#   garden test                 # Run the test suite
#   garden fmt                  # Format code using "cercis"
#   garden doc                  # Generate documentation: html + manual pages
#   garden html                 # Generate documentation: html only
#   garden man                  # Generate documentation: manual pages only
#   garden pot                  # Regenerate git-cola.pot with new translations
#   garden po                   # Update .po files with new translations from git-cola.pot
#
#   # Installation
#   garden install              # Install git-cola to the installation ${prefix}
#   garden install docs         # Install documentation
#
#   # Variables can be overridden using "-D name=value", eg:
#   garden -D DESTDIR=/tmp/stage -D prefix=/usr/local install
#   garden -D prefix=$PWD/dist install docs
#
#   # macOS
#   garden macos/app            # Build a git-cola.app bundle
#
#   # Related Projects
#   garden grow pages           # Clone the Git Cola homepage
#   garden grow fedora          # Clone the Fedora packaging
#   garden grow deb             # Clone the Debian packaging
---
garden:
  root: "${GARDEN_CONFIG_DIR}"

trees:
  git-cola:
    path: "${GARDEN_CONFIG_DIR}"
    url: "git@gitlab.com:git-cola/git-cola.git"
    commands:
      develop: ${PIP} install --editable .
      doc: garden -vv cmd docs html man
      check: |
        garden -vv test
        garden -vv doc
        garden -vv pylint
      fmt: |
        ${CERCIS} --version
        ${GIT} ls-files -- '*.py' |
        ${GREP} -v ^qtpy |
        ${XARGS} ${CERCIS} "$@"
      html: garden -vv html docs
      install: |
        if test -n "${DESTDIR}"
        then
            pip_root="--root=${DESTDIR}"
            export DESTDIR="${DESTDIR}"
        fi
        ${PIP} install --disable-pip-version-check $pip_root --prefix=${prefix} "$@" .
      i18n: |
        garden -vv pot
        garden -vv po
      macos/app: |
        ${MKDIR_P} ${cola_app}/Contents/MacOS
        ${MKDIR_P} ${cola_app_resources}
        ${PYTHON} -m venv ${cola_app_resources}
        ${cola_app_resources}/bin/pip install --requirement requirements/requirements.txt
        ${cola_app_resources}/bin/pip install --requirement requirements/requirements-optional.txt
        ${cola_app_resources}/bin/pip install --requirement requirements/requirements-dev.txt
        ${CP} contrib/darwin/Info.plist contrib/darwin/PkgInfo ${cola_app}/Contents
        if test -n "${cola_full_version}"
        then
            ${SED} -i -e s/0.0.0.0/${cola_full_version}/ ${cola_app}/Contents/Info.plist
        fi
        ${SED} -i -e s/0.0.0/${cola_version}/ ${cola_app}/Contents/Info.plist
        ${CP} contrib/darwin/git-cola ${cola_app}/Contents/MacOS
        ${CP} contrib/darwin/git-cola.icns ${cola_app}/Contents/Resources
        garden -D PIP=${cola_app_resources}/bin/pip -D prefix=${cola_app_resources} install
        garden -D SPHINXBUILD=${cola_app_resources}/bin/sphinx-build doc
        garden -D SPHINXBUILD=${cola_app_resources}/bin/sphinx-build -D prefix=${cola_app_resources} install docs
      man: garden -vv man docs
      po: |
        for po in cola/i18n/*.po
        do
            ${MSGMERGE} \
                --no-wrap \
                --no-fuzzy-matching \
                --sort-output \
                --output-file $$po.new \
                $$po \
                cola/i18n/git-cola.pot
            mv $$po.new $$po
        done
      pot: |
        ${XGETTEXT} \
            --language=Python \
            --keyword=N_ \
            --no-wrap \
            --omit-header \
            --sort-output \
            --output-dir cola/i18n \
            --output git-cola.pot \
            cola/*.py \
            cola/*/*.py
      pylint: |
        ${PYLINT} --version
        ${PYLINT} --rcfile=.pylintrc ${PYLINT_OPTIONS} "$@" cola test
      requirements: ${PIP} install --requirement requirements/requirements.txt
      requirements/maint: ${PIP} install --requirement requirements/requirements-maint.txt
      requirements/opt: ${PIP} install --requirement requirements/requirements-optional.txt
      requirements/dev: ${PIP} install --requirement requirements/requirements-dev.txt
      test: ${PYTEST} ${PYTEST_OPTIONS} "$@" cola test
      tox: ${TOX} ${TOX_OPTIONS} --parallel auto -e "${TOX_ENVS}" "$@"
      tox/check: ${TOX} ${TOX_OPTIONS} --parallel auto -e check "$@"
    remotes:
      BaumiCoder: "https://github.com/BaumiCoder/git-cola.git"
      DasaniT: "https://github.com/DasaniT/git-cola.git"
      Mailaender: "https://github.com/Mailaender/git-cola.git"
      Mithil467: "https://github.com/Mithil467/git-cola.git"
      NielBuys: "https://github.com/NielBuys/git-cola.git"
      WNguyen14: "https://github.com/WNguyen14/git-cola.git"
      abid1998: "https://github.com/abid1998/git-cola.git"
      achernet: "https://github.com/achernet/git-cola.git"
      axel-h: "https://github.com/axel-h/git-cola.git"
      bearsh: "https://github.com/bearsh/git-cola.git"
      bensmrs: "https://github.com/bensmrs/git-cola.git"
      bobvanderlinden: "https://github.com/bobvanderlinden/git-cola.git"
      brccabral: "https://github.com/brccabral/git-cola.git"
      davvid: "git@github.com:davvid/git-cola.git"
      dschwoerer: "https://github.com/dschwoerer/git-cola.git"
      florisla: "https://github.com/florisla/git-cola.git"
      fu7mu4: "https://github.com/fu7mu4/git-cola.git"
      gdebure: "https://github.com/gdebure/git-cola.git"
      github: "git@github.com:git-cola/git-cola.git"
      guoyunhe: "https://github.com/guoyunhe/git-cola.git"
      gyuris: "https://github.com/gyuris/git-cola.git"
      haffmans: "https://github.com/haffmans/git-cola.git"
      harmathy: "https://github.com/harmathy/git-cola.git"
      hsoft: "https://github.com/hsoft/git-cola.git"
      jamie-pate: "https://github.com/jamie-pate/git-cola.git"
      kenyuy: "https://github.com/kenyuy/git-cola.git"
      kisaragi-hiu: "https://github.com/kisaragi-hiu/git-cola.git"
      kneirinck: "https://github.com/kneirinck/git-cola.git"
      kurtmckee: "https://github.com/kurtmckee/git-cola.git"
      laerreal: "https://github.com/laerreal/git-cola.git"
      lah7: "https://github.com/lah7/git-cola.git"
      living180: "https://github.com/living180/git-cola.git"
      ljhcage: "https://github.com/ljhcage/git-cola.git"
      malpas: "https://github.com/malpas/git-cola.git"
      melkecelioglu: "https://github.com/melkecelioglu/git-cola.git"
      milestone12: "https://github.com/milestone12/git-cola.git"
      mmargoliono: "https://github.com/mmargoliono/git-cola"
      mp-chet: "https://github.com/mp-chet/git-cola.git"
      nakanoi: "https://github.com/nakanoi/git-cola.git"
      nandalopes: "https://github.com/nandalopes/git-cola.git"
      OriShalhon: "https://github.com/OriShalhon/git-cola.git"
      pilarmolinalopez: "https://github.com/pilarmolinalopez/git-cola.git"
      quintusfelix: "https://github.com/quintusfelix/git-cola.git"
      rafaelreuber: "https://github.com/rafaelreuber/git-cola.git"
      scop: "https://github.com/scop/git-cola.git"
      sergei-dyshel: "https://github.com/sergei-dyshel/git-cola.git"
      sthalik: "https://github.com/sthalik/git-cola.git"
      skunkwerks: "https://github.com/skunkwerks/git-cola.git"
      takluyver: "https://github.com/takluyver/git-cola.git"
      thk123: "https://github.com/thk123/git-cola.git"
      timgates42: "https://github.com/timgates42/git-cola.git"
      vdragon: "https://github.com/Vdragon/git-cola.git"
      victorhck: "https://github.com/victorhck/git-cola.git"
      virtualstaticvoid: "https://github.com/virtualstaticvoid/git-cola.git"
      wm4: "https://github.com/wm4/git-cola.git"
      wojnilowicz: "https://github.com/wojnilowicz/git-cola.git"
      yaellevy: "https://github.com/yaellevy/git-cola.git"
  deb:
    description: Debian packaging for Git Cola
    url: "git@gitlab.com:git-cola/git-cola-debian.git"
    remotes:
      davvid: "git@github.com:davvid/git-cola-debian.git"
  docs:
    commands:
      clean: rm -fr _build
      doctest: ${SPHINXBUILD} -b doctest ${SPHINX_OPTIONS} _build/doctest
      html: ${SPHINXBUILD} -b html ${SPHINX_OPTIONS} _build/html
      man: ${SPHINXBUILD} -b man ${SPHINX_OPTIONS} _build/man
      linkcheck: ${SPHINXBUILD} -b linkcheck ${SPHINX_OPTIONS} _build/linkcheck
      install: |
        ${MKDIR_P} ${DESTDIR}${docdir}
        ${INSTALL} -m 644 *.html ${DESTDIR}${docdir}
        ${INSTALL} -m 644 *.rst ${DESTDIR}${docdir}
        # HTML documentation
        ${MKDIR_P} ${DESTDIR}${htmldir}
        ${RSYNC} ${RSYNC_OPTIONS} _build/html/ ${DESTDIR}${htmldir}/
        # Manual pages
        ${MKDIR_P} ${DESTDIR}${mandir}
        ${INSTALL} -m 644 _build/man/git-cola.1 ${DESTDIR}${mandir}
        ${INSTALL} -m 644 _build/man/git-dag.1 ${DESTDIR}${mandir}
  fedora:
    description: Fedora packaging for Git Cola
    url: "https://src.fedoraproject.org/rpms/git-cola.git"
    remotes:
      git-cola: "git@gitlab.com:git-cola/git-cola-fedora.git"
      davvid: "git@github.com:davvid/git-cola-fedora.git"
  pages:
    description: "Git Cola's homepage"
    url: "git@gitlab.com:git-cola/git-cola.gitlab.io.git"
    remotes:
      github: "git@github.com:git-cola/git-cola.github.io.git"
      ls-jad-elkik: "git://github.com/ls-jad-elkik/git-cola.github.io.git"
      lz-coder: "https://github.com/lz-coder/git-cola.github.io.git"
    links:
      - "https://git-cola.gitlab.io"
      - "https://git-cola.github.io"

# Variables can be overridden externally using "garden -D name=value ...".
variables:
  # Traditional DESTDIR + prefix variables
  DESTDIR: ""
  prefix: ${GARDEN_CONFIG_DIR}/dist
  docdir: ${prefix}/share/doc/git-cola
  htmldir: ${docdir}/html
  mandir: ${prefix}/share/man/man1
  cola_app: ${TREE_PATH}/git-cola.app
  cola_app_resources: ${cola_app}/Contents/Resources
  cola_full_version: $ ./bin/git-cola version --brief
  cola_version: $ sed -e "s/VERSION = '\(.*\)'/\1/"  cola/_version.py
  # External commands and options
  CERCIS: cercis
  CP: cp
  GIT: git
  GREP: grep
  INSTALL: install
  MKDIR_P: mkdir -p
  MSGMERGE: msgmerge
  PIP: pip
  PYLINT: ${PYTHON} -B -m pylint
  PYLINT_OPTIONS: $ ${PYLINT} --score=no --help >/dev/null 2>&1 && printf '%s' --score=no
  PYTEST: ${PYTHON} -B -m pytest
  PYTEST_OPTIONS: $ test "$(uname -s)" != "Linux" && printf '%s' --ignore=cola/inotify.py
  PYTHON: python3
  RSYNC: rsync
  RSYNC_OPTIONS: "-r --delete --exclude=.buildinfo"
  SED: sed
  SPHINXBUILD: sphinx-build
  SPHINX_OPTIONS: "-d _build/doctrees -a ."
  TOX: tox
  TOX_OPTIONS: "--develop --skip-missing-interpreters"
  TOX_ENVS: "py36,py37,py38,py39,py310,py311"
  XARGS: xargs
  XGETTEXT: xgettext

...
